# build needs to be able to find the following libraries:
# - OpenEXR(libHalf.dylib libHalf.a)
# - HDF5(hdf5.a) 
# - Alembic (libAlembic.a)

# sourcedir needs submodule initialization (to compile googletest)
# - git submodule update --init --recursive

image: node:6.10.0

stages:
  - build
  - test
  - push_to_packman_staging

build:osx:
  stage: build
  tags:
    - buildfarm
    - darwin
  script:
    - rm -rf build
    - deploydir=`pwd`/Plugin/external/ThirdParty/Deploy/MacOS
    - mkdir build
    - cd build
    - cmake ../Plugin -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_PREFIX_PATH=${deploydir} \
        -DALEMBIC_DIR=${deploydir} \
        -DHDF5_USE_STATIC_LIBRARIES=ON \
        -DHDF5_LIBRARIES=${deploydir}/lib/libhdf5.a';-ldl;-lpthread' \
        -DHDF5_ROOT=${deploydir} \
        -DUSE_STATIC=ON \
        -DENABLE_DEPLOY=OFF
    - make
# Important! Do not remove this after_script as the VM will live for 12 hours before being destroyed!
  after_script:
    - /opt/post_build_script.sh

build:windows:
  stage: build
  tags:
    - buildfarm
    - windows
  script:
    - rmdir /s /q build
    - md build
    - cd build
    - set builddir %cd%
    - for /f "usebackq tokens=*" %i in (`"%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe" /latest /property installationPath`) do (set VSDIR=%i)
    - call "%VSDIR%\Common7\Tools\VsDevCmd.bat"
    - cd /d %builddir%
    - msbuild ..\Plugin\abci.sln /t:Build /p:Configuration=Master /p:Platform=x64 /m /nologo /p:OutDir=%builddir%\_out\ /p:IntDir=%builddir%\_tmp\

# Important! Do not remove this after_script as the VM will live for 12 hours before being destroyed!
  after_script:
    - C:\Users\builduser\post_build_script.bat

build:linux:
  stage: build
  tags:
    - buildfarm
    - darwin
  script:
    - rm -rf build
    - mkdir build
    - cd build
    #- cmake ../Plugin
    #- make
# Important! Do not remove this after_script as the VM will live for 12 hours before being destroyed!
  after_script:
    - /opt/post_build_script.sh

test:osx:
  stage: test
  script: 
    - make test

test:windows:
  stage: test
  script: 
    #- make test

test:linux:
  stage: test
  script: 
    #- make test

push_to_packman_staging:
  stage: push_to_packman_staging
  only:
    - /^v\d*$/
  except:
    - branches
  script:
    - curl -u $USER_NAME:$API_KEY https://staging-packages.unity.com/auth > .npmrc
    - npm publish